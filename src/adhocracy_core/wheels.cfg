[make_wheels]
recipe = collective.recipe.template
target_dir = parts/wheels
wheels =
       src/substanced
       src/adhocracy_core


input = inline:
    #!/bin/bash
    set -e
    WHEELS="${make_wheels:wheels}"
    ${buildout:bin-directory}/pip install wheel --upgrade

    # collect names and execute setup.py for each to update RELEASE-VERSION
    FILTER=""
    ADDITIONAL_REQUIREMENTS=""
    for WHEEL in $WHEELS
    do
        # execute check so a RELEASE-VERSION is created which can than be used by pip after copying files to /tmp
        FILTER="$FILTER -e $(${buildout:executable} $WHEEL/setup.py --name | tr '_' '-')"
        ADDITIONAL_REQUIREMENTS="$ADDITIONAL_REQUIREMENTS\n$(${buildout:executable} $WHEEL/setup.py --name | tr '_' '-')==$(${buildout:executable} $WHEEL/setup.py --version)"

    done

    # create requirements.txt
    if git describe --exact-match 2> /dev/null; then
      REQUIREMENTS_FILE=${make_wheels:target_dir}/requirements/$(git describe --exact-match)-requirements.txt
    else
      REQUIREMENTS_FILE=${make_wheels:target_dir}/requirements/requirements.txt
    fi
    mkdir -p ${make_wheels:target_dir}/requirements
    ${buildout:bin-directory}/pip freeze | grep -v $FILTER > $REQUIREMENTS_FILE

    # build requirement wheels
    ${buildout:bin-directory}/pip wheel \
       --find-links=${make_wheels:target_dir} \
       --wheel-dir=${make_wheels:target_dir} \
       --requirement=$REQUIREMENTS_FILE

    # build wheels
    ${buildout:bin-directory}/pip wheel \
       --find-links=${make_wheels:target_dir} \
       --wheel-dir=${make_wheels:target_dir} \
       $(echo $WHEELS | tr '\n' ' ')

    echo -e "$ADDITIONAL_REQUIREMENTS" >> $REQUIREMENTS_FILE
    (cd ${make_wheels:target_dir}/requirements; sha256sum * > sha256sums)

output = ${buildout:bin-directory}/make_wheels
mode = 755
