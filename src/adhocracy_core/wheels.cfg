[buildout]
parts +=
     make_wheels
     fix_manifest_deform
     fix_manifest_substanced
pip_exec = ${buildout:bin-directory}/pip

[make_wheels]
recipe = collective.recipe.template
target_dir = parts/wheels
wheels =
       src/deform
       src/deform_markdown
       src/substanced
       src/adhocracy_core
       src/hypatia
platform = none
input = inline:
    #!/bin/bash
    set -e
    WHEELS="${make_wheels:wheels}"
    BLACKLIST="flake|recipe|sphinx|Sphinx|pytest|debug"
    ${buildout:pip_exec} install pip --upgrade
    ${buildout:pip_exec} install wheel --upgrade

    # collect names and execute setup.py for each to update RELEASE-VERSION
    FILTER=""
    ADDITIONAL_REQUIREMENTS=""
    for WHEEL in $WHEELS
    do
        # execute check so a RELEASE-VERSION is created which can than be used by pip after copying files to /tmp
        FILTER="$FILTER -e $(${buildout:executable} $WHEEL/setup.py --name | tr '_' '-')"
        ADDITIONAL_REQUIREMENTS="$ADDITIONAL_REQUIREMENTS\n$(${buildout:executable} $WHEEL/setup.py --name | tr '_' '-')==$(${buildout:executable} $WHEEL/setup.py --version)"

    done

    # create requirements.txt
    REQUIREMENTS_FILE=${make_wheels:target_dir}/requirements/${make_wheels:platform}-$(python src/adhocracy_core/version.py)-requirements.txt
    HASH_FILE=s1-$(python src/adhocracy_core/version.py)-requirements.hash
    REQUIREMENTS_FILE_BRANCH=${make_wheels:target_dir}/requirements/${make_wheels:platform}-$(git rev-parse --abbrev-ref HEAD)-requirements.txt
    HASH_FILE_BRANCH=s1-$(git rev-parse --abbrev-ref HEAD)-requirements.hash
    mkdir -p ${make_wheels:target_dir}/requirements
    cat ${buildout:directory}/${make_wheels:platform}-requirements.txt | grep -v $FILTER | grep -vE $BLACKLIST > $REQUIREMENTS_FILE
    cat ${buildout:directory}/${make_wheels:platform}-requirements.txt | grep -v $FILTER | grep -vE $BLACKLIST > $REQUIREMENTS_FILE_BRANCH

    # build requirement wheels
    ${buildout:pip_exec} download \
       --dest=${make_wheels:target_dir} \
       --requirement=$REQUIREMENTS_FILE

    # build wheels
    ${buildout:pip_exec} wheel \
       --find-links=${make_wheels:target_dir} \
       --wheel-dir=${make_wheels:target_dir} \
       $(echo $WHEELS | tr '\n' ' ')

    echo -e "$ADDITIONAL_REQUIREMENTS" >> $REQUIREMENTS_FILE
    (cd ${make_wheels:target_dir}/requirements; sha256sum `basename $REQUIREMENTS_FILE` > $HASH_FILE)
    (cd ${make_wheels:target_dir}/requirements; sha256sum `basename $REQUIREMENTS_FILE` > $HASH_FILE_BRANCH)

output = ${buildout:bin-directory}/ad_make_wheels
mode = 755

[fix_manifest_deform]
recipe = collective.recipe.template
input = inline:
    include *.txt *.ini *.cfg *.rst
    recursive-include deform *.ico *.png *.css *.gif *.jpg *.pt *.txt *.mak *.mako *.js *.html *.xml *.mo *.po *.yaml
output = src/deform/MANIFEST.in

[fix_manifest_substanced]
recipe = collective.recipe.template
input = inline:
    include *.txt *.ini *.cfg *.rst
    recursive-include substanced *.ico *.png *.css *.gif *.jpg *.pt *.txt *.mak *.mako *.js *.html *.xml *.mo *.po *.yaml
output = src/substanced/MANIFEST.in
