/*doc
---
title: Moving Columns
name: moving-columns
category: Layout
---

This widget represents a major design concept in Adhocracy 3.
It contains a list of columns which may slide to either side to reveal
new columns with additional functionality. Each column can be shown, collapsed
or hidden completely.

States:

-   is-show-hide-hide
-   is-collapse-show-hide
-   is-collapse-show-collapse
-   is-collapse-collapse-show
-   is-show-collapse-collapse
-   is-collapse-show-show
-   is-show-show-collapse

```html_example
<div class="moving-columns" style="height: 10em; position: relative;">
    <div class="moving-column moving-column-structure">
        <div class="debug-placeholder moving-column-menu">
            <a>action</a>
        </div>
        <div class="debug-placeholder moving-column-body">structure column
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
            this is scrolling
        </div>
    </div>
    <div class="moving-column moving-column-content">
        <div class="debug-placeholder moving-column-menu">menu</div>
        <div class="debug-placeholder moving-column-body">content column</div>
    </div>
    <div class="moving-column moving-column-content2">
        <div class="debug-placeholder moving-column-menu">menu</div>
        <div class="debug-placeholder moving-column-body">secondary-content-column</div>
    </div>
</div>
<a onclick="$('.moving-columns').toggleClass('is-collapse-show-show')">click me</a>
```
*/

.moving-columns {
    overflow: hidden;
}

/*doc
---
title: Moving Column
name: moving-column
parent: moving-columns
---

States:

-   `is-show` (*default*)
-   `is-hidden`
-   `is-collapsed`

Each moving column has a menu. The menu may contain some arbitrary control
elements.  Many columns do also have control elements to close (hide) or
collapse the column.

The menu is fixed to the top of the column.

The menu should always have the same state as its columns.

*/
.moving-column {
    // layout
    @include transition(width 0.5s, left 0.5s);
    position: absolute;
    top: 0;
    bottom: 0;
    overflow: hidden;

    .moving-column-collapsed {
        display: none;
    }

    &.is-collapse, &.is-hide {
        background-color: $color-structure-introvert;
        border: 0;
        padding-left: 0;

        .moving-column-body,
        .moving-column-menu {
            display: none;
        }

        .moving-column-collapsed {
            display: block;
        }

        @media print {
            display: none;
        }
    }

    &.is-collapse {
        @include rem(font-size, $font-size-small);
        background-color: $color-background-base;
        border: 2px solid $color-structure-normal;
        border-width: 2px 2px 2px 0;
        text-align: center;

        .moving-column-icon {
            float: none;
        }
    }

    @media print {
        position: static;
        // scss-lint:disable ImportantRule
        width: auto !important;
        // scss-lint:enable ImportantRule
        border: 0;

        &:not(.has-focus) {
            display: none;
        }
    }
}

.moving-column-body,
.moving-column-modal,
.moving-column-mask {
    position: absolute;
    top: $moving-column-menu-height;
    left: 0;
    right: 0;
    overflow-y: auto;
}

.moving-column-body,
.moving-column-mask {
    bottom: 0;
}

.moving-column-body {
    @include rem(border-width, 0 $moving-column-border-width $moving-column-border-width);
    @include rem(font-size, $font-size-normal);
    border-color: $color-structure-normal;
    border-style: solid;

    @media print {
        border: 0;
        position: static;
    }
}

.moving-column-expand {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

/*doc
---
title: Moving Column Menu
name: moving-column-menu
parent: moving-columns
---

States:

-   `is-show` (*default*)
-   `is-hidden`
-   `is-collapsed`

**Warning**: This widget currently has a fixed height.

```html_example
<div class="moving-column-menu">
    <span class="debug-placeholder">icon</span>
    <span class="debug-placeholder">button</span>
    <span class="debug-placeholder">button</span>
    <span class="debug-placeholder">button</span>
    <span class="debug-placeholder">button</span>
    <span class="debug-placeholder">icon</span>
    <span class="debug-placeholder">icon</span>
</div>
```
*/
.moving-column-menu {
    @include clearfix;
    @include rem(font-size, $font-size-small);
    @include rem(height, $moving-column-menu-height);
    @include rem(line-height, $moving-column-menu-height);
    @include rem(padding, 0 0 0 $padding-small);
    background: $color-structure-normal;

    .moving-column-menu-sort-option,
    .moving-column-menu-button {
        text-decoration: none;

        &:hover, &:focus {
            color: $color-text-highlight-extrovert;
        }

        &:active, &.is-active {
            color: $color-text-highlight-normal;
         }
    }

    .moving-column-menu-sort-option,
    .moving-column-menu-button,
    .moving-column-menu-sort-label {
        @include inline-block;
        @include rem(font-size, $font-size-small);
        @include rem(margin-right, 30px);
        color: $color-text-highlight-introvert;
        font-weight: $font-weight-introvert;
        float: left;
    }

    .moving-column-menu-sort-label {
        @include rem(margin-right, 1rem);
        font-style: italic;
    }

    .moving-column-menu-sort-option {
        margin: 0;

        &:not(:last-child) {
            @include rem(margin-right, 1rem);
            position: relative;

            &:after {
                @include inline-block;
                @include rem(right, -1rem);
                @include rem(width, 1rem);
                content: "|";
                position: absolute;
                text-align: center;
                color: $color-text-highlight-introvert;
            }
        }
    }

    @media print {
        display: none;
    }
}

.moving-column-icon {
    @include rem(margin-right, 30px);
    @include rem(font-size, 17px);
    float: left;
    line-height: (24/17);
    vertical-align: middle;
}

.moving-column-menu-nav {
    float: right;

    .moving-column-menu-nav-button {
        @include inline-block;
        @include rem(min-width, 3.5rem);
        @include rem(padding, 0 0.5rem);
        font-weight: $font-weight-extrovert;
        text-align: center;
        vertical-align: baseline;
        text-decoration: none;
        color: $color-background-base;
        background-color: $color-structure-introvert;

        &:hover, &:focus {
            color: $color-text-highlight-normal;
        }

        &:active {
            color: $color-text-highlight-extrovert;
        }

        .moving-column-menu-nav-icon {
            @include rem(font-size, $font-size-smaller);
            line-height: 24px / $font-size-smaller;
        }
    }
}

.moving-column-mask {
    @include opacity(0.5);
    background-color: $color-background-mask;
    z-index: 2;

    @media print {
        display: none;
    }
}

/*doc
---
title: Moving Column Alerts
name: moving-column-alerts
parent: moving-columns
---

A list of alert messages to notify users in the moving column

```html_example
<ul class="moving-column-alerts static-example">
    <li class="moving-column-alert m-error">Error</li>
    <li class="moving-column-alert m-info">Info</li>
    <li class="moving-column-alert m-success">Success</li>
</ul>
```
*/
.moving-column-alerts {
    margin: 0;
    padding: 0;
    list-style: none;
    z-index: 3;

    @media print {
        display: none;
    }
}

.moving-column-alert {
    @include rem(padding, 1rem);
    background: $color-function-neutral;
    color: $color-text-normal;
    text-align: center;

    &.m-error {
        background: $color-function-negative;
        color: $color-text-inverted;
    }

    &.m-success {
        background: $color-function-positive;
    }
}

.moving-column-modal {
    @include clearfix;
    @include rem(padding, 1rem);
    background: $color-structure-normal;
    border-top: 1px solid $color-structure-introvert;
    // .leaflet-top has 1000
    z-index: 1000;
    max-height: 80%;
    overflow-y: auto;

    textarea,
    input[type="text"] {
        background: $color-background-base;
    }

    &.ng-enter, &.ng-leave {
        @include transition(opacity 0.5s);
    }

    &.ng-enter,
    &.ng-leave.ng-leave-active {
        @include opacity(0);
    }

    &.ng-leave,
    &.ng-enter.ng-enter-active {
        @include opacity(1);
    }

    @media print {
        display: none;
    }
}

.moving-column-tab {
    float: left;
}
