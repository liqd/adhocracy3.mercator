/*doc
---
title: map
name: map
category: Widgets
---
*/

.map-wrapper {
    .map-buttons {
        @include clearfix;
    }

    .map-button-clear,
    .map-button-reset {
        @include inline-block;
        @include rem(padding, 0 10px);
    }
}

/*doc
---
title: map info
name: map-info
parent: map
---

Map info is used to show action-related information in the context of a map.
It is different from `map-info-persistant` in that it should only be used for
information that is related to a user action and that is not shown all the
time.

```html_example
<div class="map-info">
    Some information with a <a href="#">link</a>.
</div>
<div class="map-info ng-invalid">
    Some error with a <a href="#">link</a>.
</div>
```
*/
.map-info {
    @include rem(font-size, $font-size-small);
    @include rem(padding, 5px);
    background: $color-text-normal;
    color: $color-text-inverted;
    width: 100%;

    &:hover {
        color: $color-text-inverted;
    }

    &.ng-invalid {
        background: $color-function-invalid;
        font-weight: $font-weight-extrovert;
    }
}

/*doc
---
title: persistant map info
name: map-info-persistant
parent: map
---

Persistant map info is used to show general information in the context of a
map.  It is different from `map-info` in that it should be show all the time
rather than in response to user action.

```html_example
<div class="map-info-persistent">
    Some information with a <a href="#">link</a>.
</div>
```
*/
.map-info-persistent {
    @include rem(font-size, $font-size-small);
    @include rem(padding, 5px);
    background: $color-background-base-introvert;
}

.leaflet-marker-icon {
    @include rem(font-size, 42px);
    @include text-shadow(
        -1px -1px 0 $color-text-inverted,
        1px -1px 0 $color-text-inverted,
        -1px 1px 0 $color-text-inverted,
        1px 1px 0 $color-text-inverted
    );
    color: $color-brand-two-normal;

    &.is-active, &:hover, &:focus {
        color: $color-brand-one-introvert;
    }

    &:before {
        display: block;
    }
}

.map-list-container,
.map-list-map-container {
    position: relative;
}

.map-list-zoom {
    bottom: 0;
    left: 0;
    position: absolute;
}

.map-list-navigate {
    @include rem(font-size, $font-size-normal);
    font-weight: bold;

    &:hover, &:focus {
        text-decoration: none;
    }
}

.map-list-navigate-container {
    @include rem(margin-top, -$font-size-normal);
    @include rem(width, 30px);
    position: absolute;
    top: 50%;

    p {
        @include rem(line-height, 1rem);
    }
}

.map-list-navigate-container-prev {
    @include rem(left, 10px);
    text-align: left;
}

.map-list-navigate-container-next {
    @include rem(right, 10px);
    text-align: right;
}

.map-list-scroll-container {
    @include rem(padding, 0 40px);
}

.map-list-scroll-container-inner {
    @include rem(margin, 15px 0 0);
    overflow: hidden;
    padding: 0;
    vertical-align: top;
    white-space: nowrap;

    * {
        white-space: normal;
    }
}

.map-list-item {
    @include inline-block;
    vertical-align: middle;
    width: 100%;

    &.m-empty {
        font-weight: bold;
        text-align: center;
    }
}

.map-switch {
    .map-switch-item {
        color: $color-text-normal;

        &.m-selected {
            color: $color-text-highlight-normal;
        }
    }
}
