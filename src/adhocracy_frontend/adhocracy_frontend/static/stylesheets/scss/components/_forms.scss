/*doc
---
title: input
name: input
category: Inputs
---

Inputs are all elements that allow users to input data.

They can have the following states:

-   is-empty
-   has-focus
-   is-invalid
-   is-disabled
-   is-dirty

Is-invalid should generally only change the presentation of the input widget if
it is also dirty or the form has been submitted.

```html_example
<input type="text" placeholder="required and dirty" required="required" class="is-dirty" />
<input type="text" placeholder="invalid and dirty" class="is-invalid is-dirty" />
<input type="text" placeholder="invalid and prestine" class="is-invalid" />
<input type="text" disabled="disabled" placeholder="disabled" />
<form class="ng-submitted">
    <input type="text" placeholder="invalid in submitted form" class="is-invalid" />
</form>
```
*/

/*doc
---
title: textinput
name: textinput
parent: input
---

Element to enter one line of text.

In fact, there are multiple variants of this already defined in HTML.
They should all look and behave similarily.

```html_example
<input type="text" placeholder="text" />
<input type="url" placeholder="url" />
<input type="password" placeholder="password" />
<input type="email" placeholder="email" />
<input type="date" placeholder="date" />
<input type="time" placeholder="time" />
<input type="number" placeholder="number" />
<input type="text" placeholder="required" required="required" />
<select required="required">
    <option>This one</option>
    <option>The other one</option>
</select>
<textarea placeholder="textarea"></textarea>
```
*/

/*doc
---
title: Title modifier
name: textinput.m-title
parent: textinput
---

Textinput that represents a title.

```html_example
<input type="text" placeholder="title" class="m-title"/>
```
*/

%error-state {
    border-color: lightcoral;
    outline: 1px solid lightcoral;

    &.has-focus,
    &:focus {
        border-color: $color-function-invalid;
        color: $color-function-invalid;
        outline: 1px solid $color-function-invalid;
    }
}

input[type="text"],
input[type="url"],
input[type="password"],
input[type="email"],
input[type="date"],
input[type="time"],
input[type="number"],
select,
textarea {
    display: block;
    width: 100%;
    margin-bottom: 0.5em;
    padding: 0.25em $font-size-normal;
    border: 1px solid $color-structure-border;
    color: $color-text-normal;
    background-color: $color-background-base;

    @include placeholder {
        @include opacity(1);
        color: $color-text-introvert;
    }

    &.m-title {
        font-size: $font-size-large;
    }

    &.has-focus,
    &:focus {
        border-color: $color-text-highlight-normal;
        outline: 1px solid $color-text-highlight-normal;
    }

    &.ng-dirty, &.is-dirty {
        &.ng-invalid, &:invalid, &.is-invalid {
            @extend %error-state;
        }
    }

    &.is-disabled,
    &.ng-disabled,
    &:disabled {
        border-color: $color-structure-normal;
        outline: 1px solid $color-structure-normal;
    }
}

.ng-submitted {
    input[type="text"],
    input[type="url"],
    input[type="password"],
    input[type="email"],
    input[type="date"],
    input[type="time"],
    input[type="number"],
    label,
    div,
    select,
    textarea {
        &.ng-invalid, &:invalid, &.is-invalid {
            @extend %error-state;
        }
    }
}

textarea {
    resize: vertical;
}

/*doc
---
title: error text
name: error-text
parent: input
---

When text is in error it shows in an invalid color state

```html_example
<span class="input-error">Please enter your first name</span>
```
*/

/*doc
---
title: label text
name: label-text
parent: input
---

Class to add styling to a label when the label itself is used as a container.

```html_example
<label>
    <span class="label-text">A label</span>
    <input type="text" />
</label>
```
*/

.label-text {
    display: block;
    padding-bottom: 0.5em;
}

.input-error {
    @include inline-block;
    color: $color-function-invalid;
    font-size: $font-size-small;
}

/*doc
---
title: checkbox
name: checkbox
parent: input
---

A checkbox has two states: is-checked and is-unchecked. It may be required to
be checked, w.g. for accepting terms of service.

```html_example
<label>
    <input type="checkbox" />
    click me!
</label>
```
*/

/*doc
---
title: radio button
name: radio
parent: input
---

A radio button, like a checkbox, has the two states: is-checked and
is-unchecked.  Of a group of radio buttons, none or a single one can be
checked. "required" in this context means that any of the buttons must be
checked.

```html_example
<label>
    <input name="radio-example" type="radio" />
    One option
</label>
<label>
    <input name="radio-example" type="radio" />
    The other option
</label>
```
*/

/*doc
---
title: label
name: label
category: Inputs
---

A label can be used to describe an input.

```html_example
<label>
    <input type="text" />
    description
</label>
```
*/

/*doc
---
title: Errors
name: errors
category: Inputs
---
*/

/*doc
---
title: Form Error
name: form-error
parent: errors
---

This error concerns the whole form.

```html_example
<div class="login">
    <h1 class="title">Log in!</h1>
    <div class="form-error">
        <p>This is plain wrong!</p>
    </div>
    <form class="login-form">
        <input type="text" name="name" placeholder="email or username" />
        <input type="password" name="password" placeholder="password" />
        <input type="submit" value="login" />
    </form>
</div>
```
*/
.form-error {
    margin: 1em 0;
    padding: 0 1em;
    border-top: 1px solid $color-structure-border;
    border-bottom: 1px solid $color-structure-border;
    background: $color-structure-introvert;
}

/*doc
---
title: Input Error
name: input-error
parent: errors
---

This error concerns a single input.

```html_example
<div class="login">
    <h1 class="title">Log in!</h1>
    <form class="login-form">
        <input type="text" name="name" placeholder="email or username" />
        <span class="input-error">Too short</span>
        <input type="password" name="password" placeholder="password" />
        <input type="submit" value="login" />
    </form>
</div>
```
*/
